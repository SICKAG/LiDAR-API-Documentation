openapi: 3.0.0
servers:
  - url: 'http://192.168.136.1/api'
paths:
  /LEDEnable:
    post:
      tags:
        - LED
      summary: LEDEnable
      description: ''
      operationId: LEDEnable
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LEDEnableRequest'
                - example:
                    data:
                      LEDEnable: false
            example:
              data:
                LEDEnable: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    get:
      tags:
        - LED
      summary: LEDEnable
      description: ''
      operationId: GetLEDEnable
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LEDState:
    get:
      tags:
        - LED
      summary: LEDState
      description: ''
      operationId: LEDState
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /FREchoFilter:
    get:
      tags:
        - Filter
      summary: FREchoFilter
      description: ''
      operationId: FREchoFilter
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Filter
      summary: FREchoFilter
      description: |-
        "FREchoFilter": 0 = First Echo
        "FREchoFilter": 1 = All Echos
        "FREchoFilter": 2 = Last Echo
      operationId: PostFREchoFilter
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FREchoFilterRequest'
                - example:
                    data:
                      FREchoFilter: 2
            example:
              data:
                FREchoFilter: 2
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /MCSenseLevel:
    get:
      tags:
        - Filter
      summary: MCSenseLevel
      description: Fog Filter
      operationId: MCSenseLevel
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Filter
      summary: MCSenseLevel
      description: |-
        Fog Filter

        0 = off
      operationId: PostMCSenseLevel
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MCSenseLevelRequest'
                - example:
                    data:
                      MCSenseLevel: 0
            example:
              data:
                MCSenseLevel: 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /SetScanConfigList:
    get:
      tags:
        - Basic Settings
      summary: SetScanConfigList
      description: nicht funktionsfähig
      operationId: SetScanConfigList
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Basic Settings
      summary: SetScanConfigList
      description: nicht funktionsfähig
      operationId: PostSetScanConfigList
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SetScanConfigListRequest'
                - example:
                    ScanConfigList: 0
            example:
              ScanConfigList: 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /EtherIPAddress:
    get:
      tags:
        - Connection options
      summary: EtherIPAddress
      description: ''
      operationId: EtherIPAddress
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Connection options
      summary: EtherIPAddress
      description: ''
      operationId: PostEtherIPAddress
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EtherIPAddressRequest'
                - example:
                    data:
                      EtherIPAddress:
                        - 192
                        - 168
                        - 136
                        - 1
            example:
              data:
                EtherIPAddress:
                  - 192
                  - 168
                  - 136
                  - 1
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /EtherIPMask:
    get:
      tags:
        - Connection options
      summary: EtherIPMask
      description: ''
      operationId: EtherIPMask
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Connection options
      summary: EtherIPMask
      description: ''
      operationId: PostEtherIPMask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EtherIPMaskRequest'
                - example:
                    data:
                      EtherIPMask:
                        - 255
                        - 255
                        - 255
                        - 0
            example:
              data:
                EtherIPMask:
                  - 255
                  - 255
                  - 255
                  - 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /EtherAddressingMode:
    get:
      tags:
        - Connection options
      summary: EtherAddressingMode
      description: ''
      operationId: EtherAddressingMode
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Connection options
      summary: EtherAddressingMode
      description: ''
      operationId: PostEtherAddressingMode
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EtherAddressingModeRequest'
                - example:
                    data:
                      EtherAddressingMode: 1
            example:
              data:
                EtherAddressingMode: 1
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /DeviceStatus:
    get:
      tags:
        - Status information
      summary: DeviceStatus
      description: ''
      operationId: DeviceStatus
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /DistMeasState:
    get:
      tags:
        - Status information
      summary: DistMeasState
      description: ''
      operationId: DistMeasState
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /OrderNumber:
    get:
      tags:
        - Device Information
      summary: OrderNumber
      description: ''
      operationId: OrderNumber
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /SerialNumber:
    get:
      tags:
        - Device Information
      summary: SerialNumber
      description: ''
      operationId: SerialNumber
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /FirmwareVersion:
    get:
      tags:
        - Device Information
      summary: FirmwareVersion
      description: ''
      operationId: FirmwareVersion
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /DeviceIdent:
    get:
      tags:
        - Device Information
      summary: DeviceIdent
      description: ''
      operationId: DeviceIdent
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LocationName:
    get:
      tags:
        - Device Information
      summary: LocationName
      description: ''
      operationId: LocationName
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Device Information
      summary: LocationName
      description: ''
      operationId: PostLocationName
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LocationNameRequest'
                - example:
                    data:
                      LocationName: Silas+Zechine
            example:
              data:
                LocationName: Silas+Zechine
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /ScanDataEnable:
    get:
      tags:
        - Data output
      summary: ScanDataEnable
      description: ''
      operationId: ScanDataEnable
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Data output
      summary: ScanDataEnable
      description: ''
      operationId: PostScanDataEnable
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ScanDataEnableRequest'
                - example:
                    data:
                      ScanDataEnable: true
            example:
              data:
                ScanDataEnable: true
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /ScanDataFormat:
    get:
      tags:
        - Data output
      summary: ScanDataFormat
      description: ''
      operationId: ScanDataFormat
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Data output
      summary: ScanDataFormat
      description: |+
        "ScanDataFormat": 1 = MSGPACK
        "ScanDataFormat": 2 = COMPACT

      operationId: PostScanDataFormat
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ScanDataFormatRequest'
                - example:
                    data:
                      ScanDataFormat: 0
            example:
              data:
                ScanDataFormat: 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /ScanDataEthSettings:
    get:
      tags:
        - Data output
      summary: ScanDataEthSettings
      description: ''
      operationId: ScanDataEthSettings
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Data output
      summary: ScanDataEthSettings
      description: ''
      operationId: PostScanDataEthSettings
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ScanDataEthSettingsRequest'
                - example:
                    header:
                      status: 0
                      message: Ok
                    data:
                      ScanDataEthSettings:
                        Protocol: 1
                        IPAddress:
                          - 192
                          - 168
                          - 0
                          - 100
                        Port: 2115
            example:
              header:
                status: 0
                message: Ok
              data:
                ScanDataEthSettings:
                  Protocol: 1
                  IPAddress:
                    - 192
                    - 168
                    - 0
                    - 100
                  Port: 2115
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LIDrstoutpcnt:
    post:
      tags:
        - Data output
      summary: LIDrstoutpcnt
      description: nicht funktionsfähig
      operationId: LIDrstoutpcnt
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /OutputState:
    get:
      tags:
        - Input and outputs
      summary: OutputState
      description: ''
      operationId: OutputState
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /InputState:
    get:
      tags:
        - Input and outputs
      summary: InputState
      description: ''
      operationId: InputState
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /PortConfiguration:
    get:
      tags:
        - Input and outputs
      summary: PortConfiguration
      description: ''
      operationId: PortConfiguration
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
    post:
      tags:
        - Input and outputs
      summary: PortConfiguration
      description: ''
      operationId: PostPortConfiguration
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PortConfigurationRequest'
                - example:
                    header:
                      status: 0
                      message: Ok
                    data:
                      PortConfiguration:
                        - PortType: 0
                          Name: InOut1
                          InputSettings:
                            Logic: 0
                            Debounce: 10
                            Sensitivity: 1
                            Reserved1: 0
                            Reserved2: 0
                          OutputSettings:
                            Logic: 1
                            OutputMode: 0
                            RestartType: 0
                            RestartTime: 200
                            RestartInput: 1
                            Combination: 1
                            Reserved3: 0
                            Reserved4: 0
                            Sources: []
                          Reserved7: 0
                          Reserved8: 0
                          Reserved9: 0
                          Reserved10: 0
                        - PortType: 1
                          Name: InOut2
                          InputSettings:
                            Logic: 0
                            Debounce: 10
                            Sensitivity: 1
                            Reserved1: 0
                            Reserved2: 0
                          OutputSettings:
                            Logic: 1
                            OutputMode: 0
                            RestartType: 0
                            RestartTime: 200
                            RestartInput: 1
                            Combination: 1
                            Reserved3: 0
                            Reserved4: 0
                            Sources:
                              - Name: DRDY
                                Invert: false
                                Reserved5: 0
                                Reserved6: 0
                              - Name: IN01
                                Invert: false
                                Reserved5: 0
                                Reserved6: 0
                          Reserved7: 0
                          Reserved8: 0
                          Reserved9: 0
                          Reserved10: 0
                        - PortType: 0
                          Name: InOut3
                          InputSettings:
                            Logic: 0
                            Debounce: 10
                            Sensitivity: 1
                            Reserved1: 0
                            Reserved2: 0
                          OutputSettings:
                            Logic: 0
                            OutputMode: 0
                            RestartType: 0
                            RestartTime: 200
                            RestartInput: 1
                            Combination: 1
                            Reserved3: 0
                            Reserved4: 0
                            Sources: []
                          Reserved7: 0
                          Reserved8: 0
                          Reserved9: 0
                          Reserved10: 0
            example:
              header:
                status: 0
                message: Ok
              data:
                PortConfiguration:
                  - PortType: 0
                    Name: InOut1
                    InputSettings:
                      Logic: 0
                      Debounce: 10
                      Sensitivity: 1
                      Reserved1: 0
                      Reserved2: 0
                    OutputSettings:
                      Logic: 1
                      OutputMode: 0
                      RestartType: 0
                      RestartTime: 200
                      RestartInput: 1
                      Combination: 1
                      Reserved3: 0
                      Reserved4: 0
                      Sources: []
                    Reserved7: 0
                    Reserved8: 0
                    Reserved9: 0
                    Reserved10: 0
                  - PortType: 1
                    Name: InOut2
                    InputSettings:
                      Logic: 0
                      Debounce: 10
                      Sensitivity: 1
                      Reserved1: 0
                      Reserved2: 0
                    OutputSettings:
                      Logic: 1
                      OutputMode: 0
                      RestartType: 0
                      RestartTime: 200
                      RestartInput: 1
                      Combination: 1
                      Reserved3: 0
                      Reserved4: 0
                      Sources:
                        - Name: DRDY
                          Invert: false
                          Reserved5: 0
                          Reserved6: 0
                        - Name: IN01
                          Invert: false
                          Reserved5: 0
                          Reserved6: 0
                    Reserved7: 0
                    Reserved8: 0
                    Reserved9: 0
                    Reserved10: 0
                  - PortType: 0
                    Name: InOut3
                    InputSettings:
                      Logic: 0
                      Debounce: 10
                      Sensitivity: 1
                      Reserved1: 0
                      Reserved2: 0
                    OutputSettings:
                      Logic: 0
                      OutputMode: 0
                      RestartType: 0
                      RestartTime: 200
                      RestartInput: 1
                      Combination: 1
                      Reserved3: 0
                      Reserved4: 0
                      Sources: []
                    Reserved7: 0
                    Reserved8: 0
                    Reserved9: 0
                    Reserved10: 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /NotificationList:
    get:
      tags:
        - Diagnostics
      summary: NotificationList
      description: ''
      operationId: NotificationList
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /PowerOnCnt:
    get:
      tags:
        - Operating Information
      summary: PowerOnCnt
      description: ''
      operationId: PowerOnCnt
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /OpHours:
    get:
      tags:
        - Operating Information
      summary: OpHours
      description: ''
      operationId: OpHours
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /DailyOpHours:
    get:
      tags:
        - Operating Information
      summary: DailyOpHours
      description: ''
      operationId: DailyOpHours
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LSPdatetime:
    get:
      tags:
        - Operating Information
      summary: LSPdatetime
      description: LSPdatetime returns the time set in the device.
      operationId: LSPdatetime
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /WriteEeprom:
    post:
      tags:
        - Others
      summary: WriteEeprom
      description: ''
      operationId: WriteEeprom
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /RebootDevice:
    post:
      tags:
        - Others
      summary: RebootDevice
      description: ''
      operationId: RebootDevice
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LoadFactoryDefaults:
    post:
      tags:
        - Others
      summary: LoadFactoryDefaults
      description: ''
      operationId: LoadFactoryDefaults
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /LoadApplicationDefaults:
    post:
      tags:
        - Others
      summary: LoadApplicationDefaults
      description: ''
      operationId: LoadApplicationDefaults
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
components:
  schemas:
    LEDEnableRequest:
      title: LEDEnableRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          LEDEnable: false
    FREchoFilterRequest:
      title: FREchoFilterRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          FREchoFilter: 2
    MCSenseLevelRequest:
      title: MCSenseLevelRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          MCSenseLevel: 0
    SetScanConfigListRequest:
      title: SetScanConfigListRequest
      required:
        - ScanConfigList
      type: object
      properties:
        ScanConfigList:
          type: integer
          format: int32
      example:
        ScanConfigList: 0
    EtherIPAddressRequest:
      title: EtherIPAddressRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          EtherIPAddress:
            - 192
            - 168
            - 136
            - 1
    EtherIPMaskRequest:
      title: EtherIPMaskRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          EtherIPMask:
            - 255
            - 255
            - 255
            - 0
    EtherAddressingModeRequest:
      title: EtherAddressingModeRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          EtherAddressingMode: 1
    LocationNameRequest:
      title: LocationNameRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          LocationName: Silas+Zechine
    ScanDataEnableRequest:
      title: ScanDataEnableRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          ScanDataEnable: true
    ScanDataFormatRequest:
      title: ScanDataFormatRequest
      required:
        - data
      type: object
      properties:
        data:
          type: object
      example:
        data:
          ScanDataFormat: 0
    ScanDataEthSettingsRequest:
      title: ScanDataEthSettingsRequest
      required:
        - header
        - data
      type: object
      properties:
        header:
          type: object
        data:
          type: object
      example:
        header:
          status: 0
          message: Ok
        data:
          ScanDataEthSettings:
            Protocol: 1
            IPAddress:
              - 192
              - 168
              - 0
              - 100
            Port: 2115
    PortConfigurationRequest:
      title: PortConfigurationRequest
      required:
        - header
        - data
      type: object
      properties:
        header:
          type: object
        data:
          type: object
      example:
        header:
          status: 0
          message: Ok
        data:
          PortConfiguration:
            - PortType: 0
              Name: InOut1
              InputSettings:
                Logic: 0
                Debounce: 10
                Sensitivity: 1
                Reserved1: 0
                Reserved2: 0
              OutputSettings:
                Logic: 1
                OutputMode: 0
                RestartType: 0
                RestartTime: 200
                RestartInput: 1
                Combination: 1
                Reserved3: 0
                Reserved4: 0
                Sources: []
              Reserved7: 0
              Reserved8: 0
              Reserved9: 0
              Reserved10: 0
            - PortType: 1
              Name: InOut2
              InputSettings:
                Logic: 0
                Debounce: 10
                Sensitivity: 1
                Reserved1: 0
                Reserved2: 0
              OutputSettings:
                Logic: 1
                OutputMode: 0
                RestartType: 0
                RestartTime: 200
                RestartInput: 1
                Combination: 1
                Reserved3: 0
                Reserved4: 0
                Sources:
                  - Name: DRDY
                    Invert: false
                    Reserved5: 0
                    Reserved6: 0
                  - Name: IN01
                    Invert: false
                    Reserved5: 0
                    Reserved6: 0
              Reserved7: 0
              Reserved8: 0
              Reserved9: 0
              Reserved10: 0
            - PortType: 0
              Name: InOut3
              InputSettings:
                Logic: 0
                Debounce: 10
                Sensitivity: 1
                Reserved1: 0
                Reserved2: 0
              OutputSettings:
                Logic: 0
                OutputMode: 0
                RestartType: 0
                RestartTime: 200
                RestartInput: 1
                Combination: 1
                Reserved3: 0
                Reserved4: 0
                Sources: []
              Reserved7: 0
              Reserved8: 0
              Reserved9: 0
              Reserved10: 0
tags:
  - name: LED
    description: ""
  - name: Filter
    description: ""
  - name: Basic Settings
    description: ""
  - name: Connection options
    description: ""
  - name: Status information
    description: ""
  - name: Device Information
    description: ""
  - name: Data output
    description: ""
  - name: Input and outputs
    description: ""
  - name: Diagnostics
    description: ""
  - name: Operating Information
    description: ""
  - name: Others
    description: ""
  - name: picoScan150
    description: This collection shows the possibilties to work with the picoScan150.
info:
  title: "picoScan150 REST API "
  version: "1.0"
  description: This collection shows the possibilties to work with the picoScan150.
